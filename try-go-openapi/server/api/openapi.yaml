openapi: 3.0.0
info:
  title: 匿名掲示板API
  version: 1.0.0
servers:
- description: development
  url: http://localhost:8080
paths:
  /posts:
    get:
      description: 投稿をすべて取得する
      operationId: getPosts
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Posts'
          description: 投稿の配列
    post:
      description: 投稿を作成する
      operationId: createPost
      requestBody:
        $ref: '#/components/requestBodies/Post'
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
          description: 投稿
        422:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
          description: 無効なパラメータ
  /posts/{postId}:
    delete:
      description: 投稿を削除する
      operationId: deletePost
      parameters:
      - description: 投稿のID
        explode: false
        in: path
        name: postId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        204:
          description: 投稿の削除に成功
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
          description: リソースが見つからない
    get:
      description: 投稿を取得する
      operationId: getPost
      parameters:
      - description: 投稿のID
        explode: false
        in: path
        name: postId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
          description: 投稿
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
          description: リソースが見つからない
    put:
      description: 投稿を更新する
      operationId: updatePost
      parameters:
      - description: 投稿のID
        explode: false
        in: path
        name: postId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/Post'
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
          description: 投稿
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
          description: リソースが見つからない
        422:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
          description: 無効なパラメータ
  /posts/{postId}/comments:
    get:
      description: 投稿に付いたコメントをすべて取得する
      operationId: getComments
      parameters:
      - description: 投稿のID
        explode: false
        in: path
        name: postId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comments'
          description: コメントの配列
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
          description: リソースが見つからない
    post:
      description: 投稿にコメントを付ける
      operationId: createComment
      parameters:
      - description: 投稿のID
        explode: false
        in: path
        name: postId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/Comment'
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: コメント
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
          description: リソースが見つからない
        422:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
          description: 無効なパラメータ
  /posts/{postId}/comments/{commentId}:
    delete:
      description: 投稿に付いたコメントを削除する
      operationId: deleteComment
      parameters:
      - description: 投稿のID
        explode: false
        in: path
        name: postId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: コメントのID
        explode: false
        in: path
        name: commentId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        204:
          description: コメントの削除に成功
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
          description: リソースが見つからない
components:
  parameters:
    postIdParam:
      description: 投稿のID
      explode: false
      in: path
      name: postId
      required: true
      schema:
        format: int32
        type: integer
      style: simple
    commentIdParam:
      description: コメントのID
      explode: false
      in: path
      name: commentId
      required: true
      schema:
        format: int32
        type: integer
      style: simple
  requestBodies:
    Comment:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CommentRequest'
      description: 投稿に付けるコメント
      required: true
    Post:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PostRequest'
      description: 作成する投稿
      required: true
  responses:
    Comment:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Comment'
      description: コメント
    Comments:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Comments'
      description: コメントの配列
    Post:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Post'
      description: 投稿
    Posts:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Posts'
      description: 投稿の配列
    NotFound:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Errors'
      description: リソースが見つからない
    UnprocessableEntity:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Errors'
      description: 無効なパラメータ
  schemas:
    Post:
      example:
        post:
          id: 1
          title: こんにちは
          posted_at: 2000-01-23T04:56:07.000+00:00
          content: 良い天気ですね
      properties:
        post:
          $ref: '#/components/schemas/PostProperties'
      required:
      - post
      type: object
    PostRequest:
      example:
        post:
          title: こんにちは
          content: 良い天気ですね
      properties:
        post:
          $ref: '#/components/schemas/PostParameters'
      required:
      - post
      type: object
    Posts:
      example:
        posts:
        - id: 1
          title: こんにちは
          posted_at: 2000-01-23T04:56:07.000+00:00
          content: 良い天気ですね
        - id: 1
          title: こんにちは
          posted_at: 2000-01-23T04:56:07.000+00:00
          content: 良い天気ですね
      properties:
        posts:
          items:
            $ref: '#/components/schemas/PostProperties'
          type: array
      required:
      - posts
      type: object
    PostProperties:
      example:
        id: 1
        title: こんにちは
        posted_at: 2000-01-23T04:56:07.000+00:00
        content: 良い天気ですね
      properties:
        id:
          example: 1
          format: int32
          type: integer
        title:
          example: こんにちは
          type: string
        content:
          example: 良い天気ですね
          type: string
        posted_at:
          format: date-time
          type: string
      required:
      - content
      - id
      - posted_at
      - title
      type: object
    PostParameters:
      example:
        title: こんにちは
        content: 良い天気ですね
      properties:
        title:
          example: こんにちは
          type: string
        content:
          example: 良い天気ですね
          type: string
      required:
      - content
      - title
      type: object
    Comment:
      example:
        comment:
          post_id: 1
          id: 1
          commented_at: 2000-01-23T04:56:07.000+00:00
          content: そうですね
      properties:
        comment:
          $ref: '#/components/schemas/CommentProperties'
      required:
      - comment
      type: object
    CommentRequest:
      example:
        comment:
          content: そうですね
      properties:
        comment:
          $ref: '#/components/schemas/CommentParameters'
      required:
      - comment
      type: object
    Comments:
      example:
        comments:
        - post_id: 1
          id: 1
          commented_at: 2000-01-23T04:56:07.000+00:00
          content: そうですね
        - post_id: 1
          id: 1
          commented_at: 2000-01-23T04:56:07.000+00:00
          content: そうですね
      properties:
        comments:
          items:
            $ref: '#/components/schemas/CommentProperties'
          type: array
      required:
      - comments
      type: object
    CommentProperties:
      example:
        post_id: 1
        id: 1
        commented_at: 2000-01-23T04:56:07.000+00:00
        content: そうですね
      properties:
        id:
          example: 1
          format: int32
          type: integer
        content:
          example: そうですね
          type: string
        post_id:
          example: 1
          format: int32
          type: integer
        commented_at:
          format: date-time
          type: string
      required:
      - commented_at
      - content
      - id
      - post_id
      type: object
    CommentParameters:
      example:
        content: そうですね
      properties:
        content:
          example: そうですね
          type: string
      required:
      - content
      type: object
    Errors:
      properties:
        errors:
          items:
            $ref: '#/components/schemas/ErrorProperties'
          type: array
      required:
      - errors
      type: object
    ErrorProperties:
      properties:
        title:
          example: Something went wrong
          type: string
        detail:
          example: Something went wrong. Please try again later.
          type: string
      required:
      - detail
      - title
      type: object
