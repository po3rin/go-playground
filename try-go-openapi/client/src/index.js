/**
 * 匿名掲示板API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * OpenAPI Generator version: 3.3.4
 *
 * Do not edit the class manually.
 *
 */

(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/Comment', 'model/CommentParameters', 'model/CommentProperties', 'model/CommentRequest', 'model/Comments', 'model/ErrorProperties', 'model/Errors', 'model/Post', 'model/PostParameters', 'model/PostProperties', 'model/PostRequest', 'model/Posts', 'api/DefaultApi'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('./ApiClient'), require('./model/Comment'), require('./model/CommentParameters'), require('./model/CommentProperties'), require('./model/CommentRequest'), require('./model/Comments'), require('./model/ErrorProperties'), require('./model/Errors'), require('./model/Post'), require('./model/PostParameters'), require('./model/PostProperties'), require('./model/PostRequest'), require('./model/Posts'), require('./api/DefaultApi'));
  }
}(function(ApiClient, Comment, CommentParameters, CommentProperties, CommentRequest, Comments, ErrorProperties, Errors, Post, PostParameters, PostProperties, PostRequest, Posts, DefaultApi) {
  'use strict';

  /**
   * JS API client generated by OpenAPI Generator.<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var Api = require('index'); // See note below*.
   * var xxxSvc = new Api.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new Api.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new Api.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new Api.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module index
   * @version 1.0.0
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient: ApiClient,
    /**
     * The Comment model constructor.
     * @property {module:model/Comment}
     */
    Comment: Comment,
    /**
     * The CommentParameters model constructor.
     * @property {module:model/CommentParameters}
     */
    CommentParameters: CommentParameters,
    /**
     * The CommentProperties model constructor.
     * @property {module:model/CommentProperties}
     */
    CommentProperties: CommentProperties,
    /**
     * The CommentRequest model constructor.
     * @property {module:model/CommentRequest}
     */
    CommentRequest: CommentRequest,
    /**
     * The Comments model constructor.
     * @property {module:model/Comments}
     */
    Comments: Comments,
    /**
     * The ErrorProperties model constructor.
     * @property {module:model/ErrorProperties}
     */
    ErrorProperties: ErrorProperties,
    /**
     * The Errors model constructor.
     * @property {module:model/Errors}
     */
    Errors: Errors,
    /**
     * The Post model constructor.
     * @property {module:model/Post}
     */
    Post: Post,
    /**
     * The PostParameters model constructor.
     * @property {module:model/PostParameters}
     */
    PostParameters: PostParameters,
    /**
     * The PostProperties model constructor.
     * @property {module:model/PostProperties}
     */
    PostProperties: PostProperties,
    /**
     * The PostRequest model constructor.
     * @property {module:model/PostRequest}
     */
    PostRequest: PostRequest,
    /**
     * The Posts model constructor.
     * @property {module:model/Posts}
     */
    Posts: Posts,
    /**
     * The DefaultApi service constructor.
     * @property {module:api/DefaultApi}
     */
    DefaultApi: DefaultApi
  };

  return exports;
}));
